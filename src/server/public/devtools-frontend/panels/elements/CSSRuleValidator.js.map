{"version":3,"file":"CSSRuleValidator.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/CSSRuleValidator.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport {\n  buildPropertyDefinitionText,\n  buildPropertyName,\n  buildPropertyValue,\n  isFlexContainer,\n  isGridContainer,\n  isMulticolContainer,\n} from './CSSRuleValidatorHelper.js';\n\nconst UIStrings = {\n  /**\n    *@description The message shown in the Style pane when the user hovers over a property that has no effect due to some other property.\n    *@example {flex-wrap: nowrap} REASON_PROPERTY_DECLARATION_CODE\n    *@example {align-content} AFFECTED_PROPERTY_DECLARATION_CODE\n    */\n  ruleViolatedBySameElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n    *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to some other property.\n    *@example {flex-wrap} PROPERTY_NAME\n    @example {nowrap} PROPERTY_VALUE\n    */\n  ruleViolatedBySameElementRuleFix: 'Try setting {PROPERTY_NAME} to something other than {PROPERTY_VALUE}.',\n  /**\n    *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the current property value.\n    *@example {display: block} EXISTING_PROPERTY_DECLARATION\n    *@example {display: flex} TARGET_PROPERTY_DECLARATION\n    */\n  ruleViolatedBySameElementRuleChangeSuggestion:\n      'Try setting the {EXISTING_PROPERTY_DECLARATION} property to {TARGET_PROPERTY_DECLARATION}.',\n  /**\n    *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to properties of the parent element.\n    *@example {display: block} REASON_PROPERTY_DECLARATION_CODE\n    *@example {flex} AFFECTED_PROPERTY_DECLARATION_CODE\n    */\n  ruleViolatedByParentElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property on the parent element prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n    *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the properties of the parent element.\n    *@example {display: block} EXISTING_PARENT_ELEMENT_RULE\n    *@example {display: flex} TARGET_PARENT_ELEMENT_RULE\n    */\n  ruleViolatedByParentElementRuleFix:\n      'Try setting the {EXISTING_PARENT_ELEMENT_RULE} property on the parent to {TARGET_PARENT_ELEMENT_RULE}.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/CSSRuleValidator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum HintType {\n  INACTIVE_PROPERTY = 'ruleValidation',\n  DEPRECATED_PROPERTY = 'deprecatedProperty',\n}\n\nexport class Hint {\n  readonly #hintMessage: string;\n  readonly #possibleFixMessage: string|null;\n  readonly #learnMoreLink: string|undefined;\n\n  constructor(hintMessage: string, possibleFixMessage: string|null, learnMoreLink?: string) {\n    this.#hintMessage = hintMessage;\n    this.#possibleFixMessage = possibleFixMessage;\n    this.#learnMoreLink = learnMoreLink;\n  }\n\n  getMessage(): string {\n    return this.#hintMessage;\n  }\n\n  getPossibleFixMessage(): string|null {\n    return this.#possibleFixMessage;\n  }\n\n  getLearnMoreLink(): string|undefined {\n    return this.#learnMoreLink;\n  }\n}\n\nexport abstract class CSSRuleValidator {\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Other;\n  }\n\n  readonly #affectedProperties: string[];\n\n  constructor(affectedProperties: string[]) {\n    this.#affectedProperties = affectedProperties;\n  }\n\n  getApplicableProperties(): string[] {\n    return this.#affectedProperties;\n  }\n\n  abstract getHint(\n      propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined;\n}\n\nexport class AlignContentValidator extends CSSRuleValidator {\n  constructor() {\n    super(['align-content']);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.AlignContent;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    if (computedStyles === null || computedStyles === undefined) {\n      return true;\n    }\n    if (!isFlexContainer(computedStyles)) {\n      return true;\n    }\n    return computedStyles.get('flex-wrap') !== 'nowrap';\n  }\n\n  getHint(_propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('flex-wrap', 'nowrap');\n    const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('flex-wrap'),\n          PROPERTY_VALUE: buildPropertyValue('nowrap'),\n        }),\n    );\n  }\n}\n\nexport class FlexItemValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex', 'flex-basis', 'flex-grow', 'flex-shrink']);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexItem;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): boolean {\n    if (parentComputedStyles === null) {\n      return true;\n    }\n    return isFlexContainer(parentComputedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (this.#isRuleValid(computedStyles, parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n    const targeParentPropertyDeclaration = buildPropertyDefinitionText('display', 'flex');\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          'EXISTING_PARENT_ELEMENT_RULE': reasonPropertyDeclaration,\n          'TARGET_PARENT_ELEMENT_RULE': targeParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex-direction', 'flex-flow', 'flex-wrap', 'justify-content']);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexContainer;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    if (computedStyles === null) {\n      return true;\n    }\n    return isFlexContainer(computedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'flex');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          'EXISTING_PROPERTY_DECLARATION': reasonPropertyDeclaration,\n          'TARGET_PROPERTY_DECLARATION': targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid',\n      'grid-auto-columns',\n      'grid-auto-flow',\n      'grid-auto-rows',\n      'grid-template',\n      'grid-template-areas',\n      'grid-template-columns',\n      'grid-template-rows',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.GridContainer;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    return isGridContainer(computedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          'EXISTING_PROPERTY_DECLARATION': reasonPropertyDeclaration,\n          'TARGET_PROPERTY_DECLARATION': targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridItemValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid-area',\n      'grid-column',\n      'grid-row',\n      'grid-row-end',\n      'grid-row-start',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.GridItem;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): boolean {\n    if (!parentComputedStyles) {\n      return true;\n    }\n    return isGridContainer(parentComputedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (this.#isRuleValid(computedStyles, parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const targeParentPropertyDeclaration = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          'EXISTING_PARENT_ELEMENT_RULE': reasonPropertyDeclaration,\n          'TARGET_PARENT_ELEMENT_RULE': targeParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'order',\n      'align-content',\n      'align-items',\n      'align-self',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexGrid;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    if (computedStyles === null) {\n      return true;\n    }\n    return isFlexContainer(computedStyles) || isGridContainer(computedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class MulticolFlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'gap',\n      'column-gap',\n      'row-gap',\n      'grid-gap',\n      'grid-column-gap',\n      'grid-column-end',\n      'grid-row-gap',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.MulticolFlexGrid;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    if (computedStyles === null) {\n      return true;\n    }\n    return isMulticolContainer(computedStyles) || isFlexContainer(computedStyles) || isGridContainer(computedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PaddingValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'padding',\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Padding;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    const display = computedStyles?.get('display');\n    if (!display) {\n      return true;\n    }\n    return !['table-row-group', 'table-header-group', 'table-footer-group', 'table-row', 'table-column-group',\n             'table-column']\n                .includes(display);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PositionValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'top',\n      'right',\n      'bottom',\n      'left',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Position;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>): boolean {\n    const position = computedStyles?.get('position');\n    if (position === null || position === undefined) {\n      return true;\n    }\n    return position !== 'static';\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (this.#isRuleValid(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\nexport class ZIndexValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'z-index',\n    ]);\n  }\n\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.ZIndex;\n  }\n\n  #isRuleValid(computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): boolean {\n    const position = computedStyles?.get('position');\n    if (!position) {\n      return true;\n    }\n    return ['absolute', 'relative', 'fixed', 'sticky'].includes(position) || isFlexContainer(parentComputedStyles);\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (this.#isRuleValid(computedStyles, parentComputedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\nconst CSS_RULE_VALIDATORS = [\n  AlignContentValidator,\n  FlexItemValidator,\n  FlexContainerValidator,\n  GridContainerValidator,\n  GridItemValidator,\n  FlexGridValidator,\n  MulticolFlexGridValidator,\n  PaddingValidator,\n  PositionValidator,\n  ZIndexValidator,\n];\n\nconst setupCSSRulesValidators = (): Map<string, CSSRuleValidator[]> => {\n  const validatorsMap = new Map<string, CSSRuleValidator[]>();\n  for (const validatorClass of CSS_RULE_VALIDATORS) {\n    const validator = new validatorClass();\n    const affectedProperties = validator.getApplicableProperties();\n\n    for (const affectedProperty of affectedProperties) {\n      let propertyValidators = validatorsMap.get(affectedProperty);\n      if (propertyValidators === undefined) {\n        propertyValidators = [];\n      }\n      propertyValidators.push(validator);\n\n      validatorsMap.set(affectedProperty, propertyValidators);\n    }\n  }\n  return validatorsMap;\n};\n\nexport const cssRuleValidatorsMap: Map<string, CSSRuleValidator[]> = setupCSSRulesValidators();\n"]}