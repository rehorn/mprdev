{"version":3,"file":"BreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/BreakpointsSidebarPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {LogpointPrefix, LogpointSuffix} from './BreakpointEditDialog.js';\nimport * as SourcesComponents from './components/components.js';\n\nlet breakpointsSidebarPaneInstance: BreakpointsSidebarPane;\nlet breakpointsViewControllerInstance: BreakpointsSidebarController|null;\n\nexport class BreakpointsSidebarPane extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #breakpointsView: SourcesComponents.BreakpointsView.BreakpointsView;\n  readonly #controller: BreakpointsSidebarController;\n\n  static instance(): BreakpointsSidebarPane {\n    if (!breakpointsSidebarPaneInstance) {\n      breakpointsSidebarPaneInstance = new BreakpointsSidebarPane();\n    }\n    return breakpointsSidebarPaneInstance;\n  }\n\n  constructor() {\n    super(true);\n    this.#controller = BreakpointsSidebarController.instance();\n    this.#breakpointsView = new SourcesComponents.BreakpointsView.BreakpointsView();\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.CheckboxToggledEvent.eventName, (event: Event) => {\n          const {data: {breakpointItem, checked}} = event as SourcesComponents.BreakpointsView.CheckboxToggledEvent;\n          this.#controller.breakpointStateChanged(breakpointItem, checked);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.BreakpointSelectedEvent.eventName, (event: Event) => {\n          const {data: {breakpointItem}} = event as SourcesComponents.BreakpointsView.BreakpointSelectedEvent;\n          void this.#controller.jumpToSource(breakpointItem);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.BreakpointEditedEvent.eventName, (event: Event) => {\n          const {data: {breakpointItem}} = event as SourcesComponents.BreakpointsView.BreakpointEditedEvent;\n          void this.#controller.breakpointEdited(breakpointItem);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.BreakpointsRemovedEvent.eventName, (event: Event) => {\n          const {data: {breakpointItems}} = event as SourcesComponents.BreakpointsView.BreakpointsRemovedEvent;\n          void this.#controller.breakpointsRemoved(breakpointItems);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.ExpandedStateChangedEvent.eventName, (event: Event) => {\n          const {data: {url, expanded}} = event as SourcesComponents.BreakpointsView.ExpandedStateChangedEvent;\n          void this.#controller.expandedStateChanged(url, expanded);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.PauseOnExceptionsStateChangedEvent.eventName, (event: Event) => {\n          const {data: {checked}} = event as SourcesComponents.BreakpointsView.PauseOnExceptionsStateChangedEvent;\n          this.#controller.setPauseOnExceptions(checked);\n          event.consume();\n        });\n    this.#breakpointsView.addEventListener(\n        SourcesComponents.BreakpointsView.PauseOnCaughtExceptionsStateChangedEvent.eventName, (event: Event) => {\n          const {data: {checked}} = event as SourcesComponents.BreakpointsView.PauseOnCaughtExceptionsStateChangedEvent;\n          this.#controller.setPauseOnCaughtExceptions(checked);\n          event.consume();\n        });\n\n    this.contentElement.appendChild(this.#breakpointsView);\n    this.update();\n  }\n\n  doUpdate(): Promise<void> {\n    return this.#controller.update();\n  }\n\n  set data(data: SourcesComponents.BreakpointsView.BreakpointsViewData) {\n    this.#breakpointsView.data = data;\n  }\n}\n\nexport class BreakpointsSidebarController implements UI.ContextFlavorListener.ContextFlavorListener {\n  readonly #breakpointManager: Bindings.BreakpointManager.BreakpointManager;\n  readonly #breakpointItemToLocationMap =\n      new WeakMap<SourcesComponents.BreakpointsView.BreakpointItem, Bindings.BreakpointManager.BreakpointLocation[]>();\n  readonly #breakpointsActiveSetting: Common.Settings.Setting<boolean>;\n  readonly #pauseOnExceptionEnabledSetting: Common.Settings.Setting<boolean>;\n  readonly #pauseOnCaughtExceptionSetting: Common.Settings.Setting<boolean>;\n\n  readonly #collapsedFilesSettings: Common.Settings.Setting<Platform.DevToolsPath.UrlString[]>;\n  readonly #collapsedFiles: Set<Platform.DevToolsPath.UrlString>;\n\n  #updateScheduled = false;\n  #updateRunning = false;\n\n  private constructor(\n      breakpointManager: Bindings.BreakpointManager.BreakpointManager, settings: Common.Settings.Settings) {\n    this.#collapsedFilesSettings = Common.Settings.Settings.instance().createLocalSetting('collapsedFiles', []);\n    this.#collapsedFiles = new Set(this.#collapsedFilesSettings.get());\n    this.#breakpointManager = breakpointManager;\n    this.#breakpointManager.addEventListener(\n        Bindings.BreakpointManager.Events.BreakpointAdded, this.#onBreakpointAdded, this);\n    this.#breakpointManager.addEventListener(\n        Bindings.BreakpointManager.Events.BreakpointRemoved, this.#onBreakpointRemoved, this);\n    this.#breakpointsActiveSetting = settings.moduleSetting('breakpointsActive');\n    this.#breakpointsActiveSetting.addChangeListener(this.update, this);\n    this.#pauseOnExceptionEnabledSetting = settings.moduleSetting('pauseOnExceptionEnabled');\n    this.#pauseOnExceptionEnabledSetting.addChangeListener(this.update, this);\n    this.#pauseOnCaughtExceptionSetting = settings.moduleSetting('pauseOnCaughtException');\n    this.#pauseOnCaughtExceptionSetting.addChangeListener(this.update, this);\n  }\n\n  static instance({forceNew, breakpointManager, settings}: {\n    forceNew: boolean|null,\n    breakpointManager: Bindings.BreakpointManager.BreakpointManager,\n    settings: Common.Settings.Settings,\n  } = {\n    forceNew: null,\n    breakpointManager: Bindings.BreakpointManager.BreakpointManager.instance(),\n    settings: Common.Settings.Settings.instance(),\n  }): BreakpointsSidebarController {\n    if (!breakpointsViewControllerInstance || forceNew) {\n      breakpointsViewControllerInstance = new BreakpointsSidebarController(breakpointManager, settings);\n    }\n    return breakpointsViewControllerInstance;\n  }\n\n  static removeInstance(): void {\n    breakpointsViewControllerInstance = null;\n  }\n\n  flavorChanged(_object: Object|null): void {\n    void this.update();\n  }\n\n  breakpointStateChanged(breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem, checked: boolean): void {\n    const locations = this.#getLocationsForBreakpointItem(breakpointItem);\n    locations.forEach((value: Bindings.BreakpointManager.BreakpointLocation) => {\n      const breakpoint = value.breakpoint;\n      breakpoint.setEnabled(checked);\n    });\n  }\n\n  async breakpointEdited(breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem): Promise<void> {\n    const locations = this.#getLocationsForBreakpointItem(breakpointItem);\n    let location: Bindings.BreakpointManager.BreakpointLocation|undefined;\n    for (const locationCandidate of locations) {\n      if (!location || locationCandidate.uiLocation.compareTo(location.uiLocation) < 0) {\n        location = locationCandidate;\n      }\n    }\n    if (location) {\n      await Common.Revealer.reveal(location);\n    }\n  }\n\n  breakpointsRemoved(breakpointItems: SourcesComponents.BreakpointsView.BreakpointItem[]): void {\n    const locations = breakpointItems.flatMap(breakpointItem => this.#getLocationsForBreakpointItem(breakpointItem));\n    locations.forEach(location => location?.breakpoint.remove(false /* keepInStorage */));\n  }\n\n  expandedStateChanged(url: Platform.DevToolsPath.UrlString, expanded: boolean): void {\n    if (expanded) {\n      this.#collapsedFiles.delete(url);\n    } else {\n      this.#collapsedFiles.add(url);\n    }\n\n    this.#saveSettings();\n  }\n\n  async jumpToSource(breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem): Promise<void> {\n    const uiLocations = this.#getLocationsForBreakpointItem(breakpointItem).map(location => location.uiLocation);\n    let uiLocation: Workspace.UISourceCode.UILocation|undefined;\n    for (const uiLocationCandidate of uiLocations) {\n      if (!uiLocation || uiLocationCandidate.compareTo(uiLocation) < 0) {\n        uiLocation = uiLocationCandidate;\n      }\n    }\n    if (uiLocation) {\n      await Common.Revealer.reveal(uiLocation);\n    }\n  }\n\n  setPauseOnExceptions(value: boolean): void {\n    this.#pauseOnExceptionEnabledSetting.set(value);\n  }\n\n  setPauseOnCaughtExceptions(value: boolean): void {\n    this.#pauseOnCaughtExceptionSetting.set(value);\n  }\n\n  async update(): Promise<void> {\n    this.#updateScheduled = true;\n    if (this.#updateRunning) {\n      return;\n    }\n    this.#updateRunning = true;\n    while (this.#updateScheduled) {\n      this.#updateScheduled = false;\n      const data = await this.getUpdatedBreakpointViewData();\n      BreakpointsSidebarPane.instance().data = data;\n    }\n    this.#updateRunning = false;\n  }\n\n  async getUpdatedBreakpointViewData(): Promise<SourcesComponents.BreakpointsView.BreakpointsViewData> {\n    const breakpointsActive = this.#breakpointsActiveSetting.get();\n    const pauseOnExceptions = this.#pauseOnExceptionEnabledSetting.get();\n    const pauseOnCaughtExceptions = this.#pauseOnCaughtExceptionSetting.get();\n\n    const breakpointLocations = this.#getBreakpointLocations();\n    if (!breakpointLocations.length) {\n      return {\n        breakpointsActive,\n        pauseOnCaughtExceptions,\n        pauseOnExceptions,\n        groups: [],\n      };\n    }\n\n    const locationsGroupedById = this.#groupBreakpointLocationsById(breakpointLocations);\n    const locationIdsByLineId = this.#getLocationIdsByLineId(breakpointLocations);\n\n    const content = await this.#getContent(locationsGroupedById);\n    const selectedUILocation = await this.#getHitUILocation();\n\n    const urlToGroup = new Map<Platform.DevToolsPath.UrlString, SourcesComponents.BreakpointsView.BreakpointGroup>();\n\n    for (let idx = 0; idx < locationsGroupedById.length; idx++) {\n      const locations = locationsGroupedById[idx];\n      const fstLocation = locations[0];\n      const sourceURL = fstLocation.uiLocation.uiSourceCode.url();\n      const uiLocation = fstLocation.uiLocation;\n\n      const isHit = selectedUILocation !== null &&\n          locations.some(location => location.uiLocation.id() === selectedUILocation.id());\n\n      const numBreakpointsOnLine = locationIdsByLineId.get(uiLocation.lineId()).size;\n      const showColumn = numBreakpointsOnLine > 1;\n      const locationText = uiLocation.lineAndColumnText(showColumn);\n\n      const text = (content[idx] as TextUtils.Text.Text);\n      const codeSnippet = text.lineAt(uiLocation.lineNumber);\n\n      if (isHit && this.#collapsedFiles.has(sourceURL)) {\n        this.#collapsedFiles.delete(sourceURL);\n        this.#saveSettings();\n      }\n      const expanded = !this.#collapsedFiles.has(sourceURL);\n\n      const status: SourcesComponents.BreakpointsView.BreakpointStatus = this.#getBreakpointState(locations);\n      const {type, hoverText} = this.#getBreakpointTypeAndDetails(locations);\n      const item = {location: locationText, codeSnippet, isHit, status, type, hoverText} as\n          SourcesComponents.BreakpointsView.BreakpointItem;\n      this.#breakpointItemToLocationMap.set(item, locations);\n\n      let group = urlToGroup.get(sourceURL);\n      if (group) {\n        group.breakpointItems.push(item);\n        group.expanded ||= expanded;\n      } else {\n        const editable = this.#breakpointManager.supportsConditionalBreakpoints(uiLocation.uiSourceCode);\n        group = {\n          url: sourceURL,\n          name: uiLocation.uiSourceCode.displayName(),\n          editable,\n          expanded,\n          breakpointItems: [item],\n        };\n        urlToGroup.set(sourceURL, group);\n      }\n    }\n    return {\n      breakpointsActive,\n      pauseOnCaughtExceptions,\n      pauseOnExceptions,\n      groups: Array.from(urlToGroup.values()),\n    };\n  }\n\n  #onBreakpointAdded(event: Common.EventTarget.EventTargetEvent<Bindings.BreakpointManager.BreakpointLocation>):\n      Promise<void> {\n    const breakpoint = event.data.breakpoint;\n    if (breakpoint.origin === Bindings.BreakpointManager.BreakpointOrigin.USER_ACTION &&\n        this.#collapsedFiles.has(breakpoint.url())) {\n      // Auto-expand if a new breakpoint was added to a collapsed group.\n      this.#collapsedFiles.delete(breakpoint.url());\n      this.#saveSettings();\n    }\n    return this.update();\n  }\n\n  #onBreakpointRemoved(event: Common.EventTarget.EventTargetEvent<Bindings.BreakpointManager.BreakpointLocation>):\n      Promise<void> {\n    const breakpoint = event.data.breakpoint;\n    if (this.#collapsedFiles.has(breakpoint.url())) {\n      const locations = Bindings.BreakpointManager.BreakpointManager.instance().allBreakpointLocations();\n      const otherBreakpointsOnSameFileExist =\n          locations.some(location => location.breakpoint.url() === breakpoint.url());\n      if (!otherBreakpointsOnSameFileExist) {\n        // Clear up the #collapsedFiles set from this url if no breakpoint is left in this group.\n        this.#collapsedFiles.delete(breakpoint.url());\n        this.#saveSettings();\n      }\n    }\n    return this.update();\n  }\n\n  #saveSettings(): void {\n    this.#collapsedFilesSettings.set(Array.from(this.#collapsedFiles.values()));\n  }\n\n  #getBreakpointTypeAndDetails(locations: Bindings.BreakpointManager.BreakpointLocation[]):\n      {type: SourcesComponents.BreakpointsView.BreakpointType, hoverText?: string} {\n    const breakpointWithCondition = locations.find(location => Boolean(location.breakpoint.condition()));\n    let hoverText = breakpointWithCondition?.breakpoint.condition();\n    let type = SourcesComponents.BreakpointsView.BreakpointType.REGULAR_BREAKPOINT;\n    if (breakpointWithCondition && hoverText) {\n      if (hoverText.startsWith(LogpointPrefix) && hoverText.endsWith(LogpointSuffix)) {\n        type = SourcesComponents.BreakpointsView.BreakpointType.LOGPOINT;\n        hoverText = hoverText.slice(LogpointPrefix.length, hoverText.length - LogpointSuffix.length);\n      } else {\n        type = SourcesComponents.BreakpointsView.BreakpointType.CONDITIONAL_BREAKPOINT;\n      }\n    }\n    return {type, hoverText};\n  }\n\n  #getLocationsForBreakpointItem(breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem):\n      Bindings.BreakpointManager.BreakpointLocation[] {\n    const locations = this.#breakpointItemToLocationMap.get(breakpointItem);\n    assertNotNullOrUndefined(locations);\n    return locations;\n  }\n\n  async #getHitUILocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (details && details.callFrames.length) {\n      return await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().rawLocationToUILocation(\n          details.callFrames[0].location());\n    }\n    return null;\n  }\n\n  #getBreakpointLocations(): Bindings.BreakpointManager.BreakpointLocation[] {\n    const locations = this.#breakpointManager.allBreakpointLocations().filter(\n        breakpointLocation =>\n            breakpointLocation.uiLocation.uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Debugger);\n\n    locations.sort((item1, item2) => item1.uiLocation.compareTo(item2.uiLocation));\n\n    const result = [];\n    let lastBreakpoint: Bindings.BreakpointManager.Breakpoint|null = null;\n    let lastLocation: Workspace.UISourceCode.UILocation|null = null;\n    for (const location of locations) {\n      if (location.breakpoint !== lastBreakpoint || (lastLocation && location.uiLocation.compareTo(lastLocation))) {\n        result.push(location);\n        lastBreakpoint = location.breakpoint;\n        lastLocation = location.uiLocation;\n      }\n    }\n    return result;\n  }\n\n  #groupBreakpointLocationsById(breakpointLocations: Bindings.BreakpointManager.BreakpointLocation[]):\n      Bindings.BreakpointManager.BreakpointLocation[][] {\n    const map = new Platform.MapUtilities.Multimap<string, Bindings.BreakpointManager.BreakpointLocation>();\n    for (const breakpointLocation of breakpointLocations) {\n      const uiLocation = breakpointLocation.uiLocation;\n      map.set(uiLocation.id(), breakpointLocation);\n    }\n    const arr: Bindings.BreakpointManager.BreakpointLocation[][] = [];\n    for (const id of map.keysArray()) {\n      const locations = Array.from(map.get(id));\n      if (locations.length) {\n        arr.push(locations);\n      }\n    }\n    return arr;\n  }\n\n  #getLocationIdsByLineId(breakpointLocations: Bindings.BreakpointManager.BreakpointLocation[]):\n      Platform.MapUtilities.Multimap<string, string> {\n    const result = new Platform.MapUtilities.Multimap<string, string>();\n\n    for (const breakpointLocation of breakpointLocations) {\n      const uiLocation = breakpointLocation.uiLocation;\n      result.set(uiLocation.lineId(), uiLocation.id());\n    }\n\n    return result;\n  }\n\n  #getBreakpointState(locations: Bindings.BreakpointManager.BreakpointLocation[]):\n      SourcesComponents.BreakpointsView.BreakpointStatus {\n    const hasEnabled = locations.some(location => location.breakpoint.enabled());\n    const hasDisabled = locations.some(location => !location.breakpoint.enabled());\n    let status: SourcesComponents.BreakpointsView.BreakpointStatus;\n    if (hasEnabled) {\n      status = hasDisabled ? SourcesComponents.BreakpointsView.BreakpointStatus.INDETERMINATE :\n                             SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED;\n    } else {\n      status = SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED;\n    }\n    return status;\n  }\n\n  #getContent(locations: Bindings.BreakpointManager.BreakpointLocation[][]): Promise<TextUtils.Text.Text[]> {\n    // Use a cache to share the Text objects between all breakpoints. This way\n    // we share the cached line ending information that Text calculates. This\n    // was very slow to calculate with a lot of breakpoints in the same very\n    // large source file.\n    const contentToTextMap = new Map<string, TextUtils.Text.Text>();\n\n    return Promise.all(locations.map(async ([{uiLocation: {uiSourceCode}}]) => {\n      if (uiSourceCode.mimeType() === 'application/wasm') {\n        // We could mirror the logic from `SourceFrame._ensureContentLoaded()` here\n        // (and if so, ideally share that code somewhere), but that's quite heavy\n        // logic just to display a single Wasm instruction. Also not really clear\n        // how much value this would add. So let's keep it simple for now and don't\n        // display anything additional for Wasm breakpoints, and if there's demand\n        // to display some text preview, we could look into selectively disassemb-\n        // ling the part of the text that we need here.\n        // Relevant crbug: https://crbug.com/1090256\n        return new TextUtils.Text.Text('');\n      }\n      const {content} = await uiSourceCode.requestContent();\n      const contentText = content || '';\n      if (contentToTextMap.has(contentText)) {\n        return contentToTextMap.get(contentText) as TextUtils.Text.Text;\n      }\n      const text = new TextUtils.Text.Text(contentText);\n      contentToTextMap.set(contentText, text);\n      return text;\n    }));\n  }\n}\n"]}