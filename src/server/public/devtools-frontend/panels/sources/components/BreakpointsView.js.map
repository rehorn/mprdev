{"version":3,"file":"BreakpointsView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/sources/components/BreakpointsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as TwoStatesCounter from '../../../ui/components/two_states_counter/two_states_counter.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport breakpointsViewStyles from './breakpointsView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in pausing the debugger on exceptions in the Sources panel.\n  */\n  pauseOnExceptions: 'Pause on exceptions',\n  /**\n  *@description Text for pausing the debugger on caught exceptions in the Sources panel.\n  */\n  pauseOnCaughtExceptions: 'Pause on caught exceptions',\n  /**\n  *@description Text exposed to screen readers on checked items.\n  */\n  checked: 'checked',\n  /**\n  *@description Accessible text exposed to screen readers when the screen reader encounters an unchecked checkbox.\n  */\n  unchecked: 'unchecked',\n  /**\n  *@description Accessible text for a breakpoint collection with a combination of checked states.\n  */\n  indeterminate: 'mixed',\n  /**\n  *@description Accessibility label for hit breakpoints in the Sources panel.\n  *@example {checked} PH1\n  */\n  breakpointHit: '{PH1} breakpoint hit',\n  /**\n  *@description Tooltip text that shows when hovered over a remove button that appears next to a filename in the breakpoint sidebarof the sources panel. Also used in the context menu for breakpoint groups.\n  */\n  removeAllBreakpointsInFile: 'Remove all breakpoints in file',\n  /**\n   *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that disables all breakpoints in a file.\n   */\n  disableAllBreakpointsInFile: 'Disable all breakpoints in file',\n  /**\n   *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that enables all breakpoints in a file.\n   */\n  enableAllBreakpointsInFile: 'Enable all breakpoints in file',\n  /**\n  *@description Tooltip text that shows when hovered over an edit button that appears next to a breakpoint in the breakpoint sidebar of the sources panel.\n  */\n  editBreakpoint: 'Edit breakpoint',\n  /**\n  *@description Tooltip text that shows when hovered over a remove button that appears next to a breakpoint in the breakpoint sidebar of the sources panel. Also used in the context menu for breakpoint items.\n  */\n  removeBreakpoint: 'Remove breakpoint',\n  /**\n  *@description Text to remove all breakpoints\n  */\n  removeAllBreakpoints: 'Remove all breakpoints',\n  /**\n  *@description Text in Breakpoints Sidebar Pane of the Sources panel\n  */\n  removeOtherBreakpoints: 'Remove other breakpoints',\n  /**\n  *@description Context menu item that reveals the source code location of a breakpoint in the Sources panel.\n  */\n  revealLocation: 'Reveal location',\n  /**\n  *@description Tooltip text that shows when hovered over a piece of code of a breakpoint in the breakpoint sidebar of the sources panel. It shows the condition, on which the breakpoint will stop.\n  *@example {x < 3} PH1\n  */\n  conditionCode: 'Condition: {PH1}',\n  /**\n  *@description Tooltip text that shows when hovered over a piece of code of a breakpoint in the breakpoint sidebar of the sources panel. It shows what is going to be printed in the console, if execution hits this breakpoint.\n  *@example {'hello'} PH1\n  */\n  logpointCode: 'Logpoint: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/components/BreakpointsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst MAX_SNIPPET_LENGTH = 200;\n\nexport interface BreakpointsViewData {\n  breakpointsActive: boolean;\n  pauseOnExceptions: boolean;\n  pauseOnCaughtExceptions: boolean;\n  groups: BreakpointGroup[];\n}\n\nexport interface BreakpointGroup {\n  name: string;\n  url: Platform.DevToolsPath.UrlString;\n  editable: boolean;\n  expanded: boolean;\n  breakpointItems: BreakpointItem[];\n}\n\nexport interface BreakpointItem {\n  location: string;\n  codeSnippet: string;\n  isHit: boolean;\n  status: BreakpointStatus;\n  type: BreakpointType;\n  hoverText?: string;\n}\n\nexport const enum BreakpointStatus {\n  ENABLED = 'ENABLED',\n  DISABLED = 'DISABLED',\n  INDETERMINATE = 'INDETERMINATE',\n}\n\nexport const enum BreakpointType {\n  LOGPOINT = 'LOGPOINT',\n  CONDITIONAL_BREAKPOINT = 'CONDITIONAL_BREAKPOINT',\n  REGULAR_BREAKPOINT = 'REGULAR_BREAKPOINT',\n}\n\nexport class CheckboxToggledEvent extends Event {\n  static readonly eventName = 'checkboxtoggled';\n  data: {breakpointItem: BreakpointItem, checked: boolean};\n\n  constructor(breakpointItem: BreakpointItem, checked: boolean) {\n    super(CheckboxToggledEvent.eventName);\n    this.data = {breakpointItem: breakpointItem, checked};\n  }\n}\n\nexport class PauseOnExceptionsStateChangedEvent extends Event {\n  static readonly eventName = 'pauseonexceptionsstatechanged';\n  data: {checked: boolean};\n\n  constructor(checked: boolean) {\n    super(PauseOnExceptionsStateChangedEvent.eventName);\n    this.data = {checked};\n  }\n}\n\nexport class PauseOnCaughtExceptionsStateChangedEvent extends Event {\n  static readonly eventName = 'pauseoncaughtexceptionsstatechanged';\n  data: {checked: boolean};\n\n  constructor(checked: boolean) {\n    super(PauseOnCaughtExceptionsStateChangedEvent.eventName);\n    this.data = {checked};\n  }\n}\n\nexport class ExpandedStateChangedEvent extends Event {\n  static readonly eventName = 'expandedstatechanged';\n  data: {url: Platform.DevToolsPath.UrlString, expanded: boolean};\n\n  constructor(url: Platform.DevToolsPath.UrlString, expanded: boolean) {\n    super(ExpandedStateChangedEvent.eventName);\n    this.data = {url, expanded};\n  }\n}\n\nexport class BreakpointSelectedEvent extends Event {\n  static readonly eventName = 'breakpointselected';\n  data: {breakpointItem: BreakpointItem};\n\n  constructor(breakpointItem: BreakpointItem) {\n    super(BreakpointSelectedEvent.eventName);\n    this.data = {breakpointItem: breakpointItem};\n  }\n}\n\nexport class BreakpointEditedEvent extends Event {\n  static readonly eventName = 'breakpointedited';\n  data: {breakpointItem: BreakpointItem};\n\n  constructor(breakpointItem: BreakpointItem) {\n    super(BreakpointEditedEvent.eventName);\n    this.data = {breakpointItem};\n  }\n}\n\nexport class BreakpointsRemovedEvent extends Event {\n  static readonly eventName = 'breakpointsremoved';\n  data: {breakpointItems: BreakpointItem[]};\n\n  constructor(breakpointItems: BreakpointItem[]) {\n    super(BreakpointsRemovedEvent.eventName);\n    this.data = {breakpointItems};\n  }\n}\n\nexport class BreakpointsView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-breakpoint-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n\n  #pauseOnExceptions: boolean = false;\n  #pauseOnCaughtExceptions: boolean = false;\n  #breakpointsActive: boolean = true;\n  #breakpointGroups: BreakpointGroup[] = [];\n\n  set data(data: BreakpointsViewData) {\n    this.#pauseOnExceptions = data.pauseOnExceptions;\n    this.#pauseOnCaughtExceptions = data.pauseOnCaughtExceptions;\n    this.#breakpointsActive = data.breakpointsActive;\n    this.#breakpointGroups = data.groups;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [breakpointsViewStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    // clang-format off\n    const renderedGroups = this.#breakpointGroups.map(\n        group => LitHtml.html`\n          <hr />\n          ${this.#renderBreakpointGroup(group)}\n        `);\n    const out = LitHtml.html`\n    <div class='pause-on-exceptions'>\n      <label class='checkbox-label'>\n        <input type='checkbox' ?checked=${this.#pauseOnExceptions} @change=${this.#onPauseOnExceptionsStateChanged.bind(this)}>\n        <span>${i18nString(UIStrings.pauseOnExceptions)}</span>\n      </label>\n    </div>\n    ${this.#pauseOnExceptions ? LitHtml.html`\n      <div class='pause-on-caught-exceptions'>\n        <label class='checkbox-label'>\n          <input type='checkbox' ?checked=${this.#pauseOnCaughtExceptions} @change=${this.#onPauseOnCaughtExceptionsStateChanged.bind(this)}>\n          <span>${i18nString(UIStrings.pauseOnCaughtExceptions)}</span>\n        </label>\n      </div>\n      ` : LitHtml.nothing}\n    <div role=tree>${renderedGroups}</div>`;\n    // clang-format on\n    LitHtml.render(out, this.#shadow, {host: this});\n  }\n\n  #renderEditBreakpointButton(breakpointItem: BreakpointItem): LitHtml.TemplateResult {\n    const clickHandler = (event: Event): void => {\n      this.dispatchEvent(new BreakpointEditedEvent(breakpointItem));\n      event.consume();\n    };\n    // clang-format off\n    return LitHtml.html`\n    <button class='edit-breakpoint-button' @click=${clickHandler} title=${i18nString(UIStrings.editBreakpoint)}>\n    <${IconButton.Icon.Icon.litTagName} .data=${{\n        iconName: 'edit-icon',\n        width: '10px',\n        color: 'var(--color-text-secondary)',\n      } as IconButton.Icon.IconData}\n      }>\n      </${IconButton.Icon.Icon.litTagName}>\n    </button>\n      `;\n    // clang-format on\n  }\n\n  #renderRemoveBreakpointButton(breakpointItems: BreakpointItem[], tooltipText: string): LitHtml.TemplateResult {\n    const clickHandler = (event: Event): void => {\n      this.dispatchEvent(new BreakpointsRemovedEvent(breakpointItems));\n      event.consume();\n    };\n    // clang-format off\n    return LitHtml.html`\n    <button class='remove-breakpoint-button' @click=${clickHandler} title=${tooltipText}>\n    <${IconButton.Icon.Icon.litTagName} .data=${{\n        iconName: 'close-icon',\n        width: '7px',\n        color: 'var(--color-text-secondary)',\n      } as IconButton.Icon.IconData}\n      }>\n      </${IconButton.Icon.Icon.litTagName}>\n    </button>\n      `;\n    // clang-format on\n  }\n\n  #onBreakpointGroupContextMenu(event: Event, breakpointGroup: BreakpointGroup): void {\n    const {breakpointItems} = breakpointGroup;\n    const menu = new UI.ContextMenu.ContextMenu(event);\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeAllBreakpointsInFile), () => {\n      this.dispatchEvent(new BreakpointsRemovedEvent(breakpointItems));\n    });\n    const notDisabledItems =\n        breakpointItems.filter(breakpointItem => breakpointItem.status !== BreakpointStatus.DISABLED);\n    menu.defaultSection().appendItem(i18nString(UIStrings.disableAllBreakpointsInFile), () => {\n      for (const breakpointItem of notDisabledItems) {\n        this.dispatchEvent(new CheckboxToggledEvent(breakpointItem, false));\n      }\n    }, notDisabledItems.length === 0);\n    const notEnabledItems =\n        breakpointItems.filter(breakpointItem => breakpointItem.status !== BreakpointStatus.ENABLED);\n    menu.defaultSection().appendItem(i18nString(UIStrings.enableAllBreakpointsInFile), () => {\n      for (const breakpointItem of notEnabledItems) {\n        this.dispatchEvent(new CheckboxToggledEvent(breakpointItem, true));\n      }\n    }, notEnabledItems.length === 0);\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeAllBreakpoints), () => {\n      const breakpointItems = this.#breakpointGroups.map(({breakpointItems}) => breakpointItems).flat();\n      this.dispatchEvent(new BreakpointsRemovedEvent(breakpointItems));\n    });\n    const otherGroups = this.#breakpointGroups.filter(group => group !== breakpointGroup);\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeOtherBreakpoints), () => {\n      const breakpointItems = otherGroups.map(({breakpointItems}) => breakpointItems).flat();\n      this.dispatchEvent(new BreakpointsRemovedEvent(breakpointItems));\n    }, otherGroups.length === 0);\n\n    void menu.show();\n  }\n\n  #renderBreakpointGroup(group: BreakpointGroup): LitHtml.TemplateResult {\n    const contextmenuHandler = (event: Event): void => {\n      this.#onBreakpointGroupContextMenu(event, group);\n      event.consume();\n    };\n    const toggleHandler = (event: Event): void => {\n      const {open} = event.target as HTMLDetailsElement;\n      group.expanded = open;\n      this.dispatchEvent(new ExpandedStateChangedEvent(group.url, open));\n      event.consume();\n    };\n    const classMap = {\n      active: this.#breakpointsActive,\n    };\n    // clang-format off\n    return LitHtml.html`\n      <details class=${LitHtml.Directives.classMap(classMap)}\n               data-group=true\n               role=group\n               aria-label='${group.name}'\n               aria-description='${group.url}'\n               ?open=${group.expanded}\n               @toggle=${toggleHandler}>\n        <summary @contextmenu=${contextmenuHandler} >\n          <span class='group-header' aria-hidden=true>${this.#renderFileIcon()}<span class='group-header-title' title='${group.url}'>${group.name}</span></span>\n          <span class='group-hover-actions'>\n            ${this.#renderRemoveBreakpointButton(group.breakpointItems, i18nString(UIStrings.removeAllBreakpointsInFile))}\n            ${this.#renderBreakpointCounter(group)}\n          </span>\n        </summary>\n        ${group.breakpointItems.map(entry => this.#renderBreakpointEntry(entry, group.editable))}\n      </div>\n      `;\n    // clang-format on\n  }\n\n  #renderBreakpointCounter(group: BreakpointGroup): LitHtml.TemplateResult {\n    const numActive = group.breakpointItems.reduce((previousValue: number, currentValue: BreakpointItem) => {\n      return currentValue.status === BreakpointStatus.ENABLED ? previousValue + 1 : previousValue;\n    }, 0);\n    const numInactive = group.breakpointItems.length - numActive;\n    // clang-format off\n    const inactiveActiveCounter = LitHtml.html`\n    <${TwoStatesCounter.TwoStatesCounter.TwoStatesCounter.litTagName} .data=${\n        {active: numActive, inactive: numInactive, width: '15px', height: '15px'} as\n        TwoStatesCounter.TwoStatesCounter.TwoStatesCounterData}>\n    </${TwoStatesCounter.TwoStatesCounter.TwoStatesCounter.litTagName}>\n    `;\n    // clang-format on\n    return inactiveActiveCounter;\n  }\n\n  #renderFileIcon(): LitHtml.TemplateResult {\n    return LitHtml.html`\n      <${IconButton.Icon.Icon.litTagName} .data=${\n        {iconName: 'ic_file_script', color: 'var(--color-ic-file-script)', width: '16px', height: '16px'} as\n        IconButton.Icon.IconWithName}></${IconButton.Icon.Icon.litTagName}>\n    `;\n  }\n\n  #onBreakpointEntryContextMenu(event: Event, breakpointItem: BreakpointItem, editable: boolean): void {\n    const menu = new UI.ContextMenu.ContextMenu(event);\n\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeBreakpoint), () => {\n      this.dispatchEvent(new BreakpointsRemovedEvent([breakpointItem]));\n    });\n    menu.defaultSection().appendItem(i18nString(UIStrings.editBreakpoint), () => {\n      this.dispatchEvent(new BreakpointEditedEvent(breakpointItem));\n    }, !editable);\n    menu.defaultSection().appendItem(i18nString(UIStrings.revealLocation), () => {\n      this.dispatchEvent(new BreakpointSelectedEvent(breakpointItem));\n    });\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeAllBreakpoints), () => {\n      const breakpointItems = this.#breakpointGroups.map(({breakpointItems}) => breakpointItems).flat();\n      this.dispatchEvent(new BreakpointsRemovedEvent(breakpointItems));\n    });\n    const otherItems = this.#breakpointGroups.map(({breakpointItems}) => breakpointItems)\n                           .flat()\n                           .filter(item => item !== breakpointItem);\n    menu.defaultSection().appendItem(i18nString(UIStrings.removeOtherBreakpoints), () => {\n      this.dispatchEvent(new BreakpointsRemovedEvent(otherItems));\n    }, otherItems.length === 0);\n\n    void menu.show();\n  }\n\n  #renderBreakpointEntry(breakpointItem: BreakpointItem, editable: boolean): LitHtml.TemplateResult {\n    const clickHandler = (event: Event): void => {\n      this.dispatchEvent(new BreakpointSelectedEvent(breakpointItem));\n      event.consume();\n    };\n    const contextmenuHandler = (event: Event): void => {\n      this.#onBreakpointEntryContextMenu(event, breakpointItem, editable);\n      event.consume();\n    };\n    const classMap = {\n      'breakpoint-item': true,\n      'hit': breakpointItem.isHit,\n      'conditional-breakpoint': breakpointItem.type === BreakpointType.CONDITIONAL_BREAKPOINT,\n      'logpoint': breakpointItem.type === BreakpointType.LOGPOINT,\n    };\n    const breakpointItemDescription = this.#getBreakpointItemDescription(breakpointItem);\n    const codeSnippet = Platform.StringUtilities.trimEndWithMaxLength(breakpointItem.codeSnippet, MAX_SNIPPET_LENGTH);\n    const codeSnippetTooltip = this.#getCodeSnippetTooltip(breakpointItem.type, breakpointItem.hoverText);\n\n    // clang-format off\n    return LitHtml.html`\n    <div class=${LitHtml.Directives.classMap(classMap)}\n         aria-label=${breakpointItemDescription}\n         role=treeitem\n         tabIndex=${breakpointItem.isHit ? 0 : -1}\n         @contextmenu=${contextmenuHandler}>\n      <label class='checkbox-label'>\n        <span class='type-indicator'></span>\n        <input type='checkbox' aria-label=${breakpointItem.location} ?indeterminate=${breakpointItem.status === BreakpointStatus.INDETERMINATE} ?checked=${breakpointItem.status === BreakpointStatus.ENABLED} @change=${(e: Event): void => this.#onCheckboxToggled(e, breakpointItem)}>\n      </label>\n      <span class='code-snippet' @click=${clickHandler} title=${codeSnippetTooltip}>${codeSnippet}</span>\n      <span class='breakpoint-item-location-or-actions'>\n        ${editable ? this.#renderEditBreakpointButton(breakpointItem) : LitHtml.nothing}\n        ${this.#renderRemoveBreakpointButton([breakpointItem], i18nString(UIStrings.removeBreakpoint))}\n        <span class='location'>${breakpointItem.location}</span>\n      </span>\n    </div>\n    `;\n    // clang-format on\n  }\n\n  #getCodeSnippetTooltip(type: BreakpointType, hoverText?: string): string|undefined {\n    switch (type) {\n      case BreakpointType.REGULAR_BREAKPOINT:\n        return undefined;\n      case BreakpointType.CONDITIONAL_BREAKPOINT:\n        assertNotNullOrUndefined(hoverText);\n        return i18nString(UIStrings.conditionCode, {PH1: hoverText});\n      case BreakpointType.LOGPOINT:\n        assertNotNullOrUndefined(hoverText);\n        return i18nString(UIStrings.logpointCode, {PH1: hoverText});\n    }\n  }\n\n  #getBreakpointItemDescription(breakpointItem: BreakpointItem): Platform.UIString.LocalizedString {\n    let checkboxDescription;\n    switch (breakpointItem.status) {\n      case BreakpointStatus.ENABLED:\n        checkboxDescription = i18nString(UIStrings.checked);\n        break;\n      case BreakpointStatus.DISABLED:\n        checkboxDescription = i18nString(UIStrings.unchecked);\n        break;\n      case BreakpointStatus.INDETERMINATE:\n        checkboxDescription = i18nString(UIStrings.indeterminate);\n        break;\n    }\n    if (!breakpointItem.isHit) {\n      return checkboxDescription;\n    }\n    return i18nString(UIStrings.breakpointHit, {PH1: checkboxDescription});\n  }\n\n  #onCheckboxToggled(e: Event, item: BreakpointItem): void {\n    const element = e.target as HTMLInputElement;\n    this.dispatchEvent(new CheckboxToggledEvent(item, element.checked));\n  }\n\n  #onPauseOnCaughtExceptionsStateChanged(e: Event): void {\n    const {checked} = e.target as HTMLInputElement;\n    this.dispatchEvent(new PauseOnCaughtExceptionsStateChangedEvent(checked));\n  }\n\n  #onPauseOnExceptionsStateChanged(e: Event): void {\n    const {checked} = e.target as HTMLInputElement;\n    this.dispatchEvent(new PauseOnExceptionsStateChangedEvent(checked));\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-breakpoint-view', BreakpointsView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-breakpoint-view': BreakpointsView;\n  }\n}\n"]}