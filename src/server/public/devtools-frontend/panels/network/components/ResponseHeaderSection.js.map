{"version":3,"file":"ResponseHeaderSection.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/network/components/ResponseHeaderSection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport {\n  type HeaderDescriptor,\n  type HeaderDetailsDescriptor,\n  type HeaderEditedEvent,\n  type HeaderEditorDescriptor,\n  HeaderSectionRow,\n  type HeaderSectionRowData,\n} from './HeaderSectionRow.js';\nimport * as Persistence from '../../../models/persistence/persistence.js';\nimport type * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\n\nimport responseHeaderSectionStyles from './ResponseHeaderSection.css.js';\n\nconst {render, html} = LitHtml;\n\nconst UIStrings = {\n  /**\n  *@description Label for a button which allows adding an HTTP header.\n  */\n  addHeader: 'Add header',\n  /**\n  *@description Explanation text for which cross-origin policy to set.\n  */\n  chooseThisOptionIfTheResourceAnd:\n      'Choose this option if the resource and the document are served from the same site.',\n  /**\n  *@description Default name of the HTTP header when adding a header override. Header names are lower case and cannot contain whitespace.\n  */\n  defaultHeaderName: 'header-name',\n  /**\n  *@description Default value of the HTTP header when adding a header override.\n  */\n  defaultHeaderValue: 'header value',\n  /**\n  *@description Explanation text for which cross-origin policy to set.\n  */\n  onlyChooseThisOptionIfAn:\n      'Only choose this option if an arbitrary website including this resource does not impose a security risk.',\n  /**\n  *@description Message in the Headers View of the Network panel when a cross-origin opener policy blocked loading a sandbox iframe.\n  */\n  thisDocumentWasBlockedFrom:\n      'This document was blocked from loading in an `iframe` with a `sandbox` attribute because this document specified a cross-origin opener policy.',\n  /**\n  *@description Message in the Headers View of the Network panel when a cross-origin embedder policy header needs to be set.\n  */\n  toEmbedThisFrameInYourDocument:\n      'To embed this frame in your document, the response needs to enable the cross-origin embedder policy by specifying the following response header:',\n  /**\n  *@description Message in the Headers View of the Network panel when a cross-origin resource policy header needs to be set.\n  */\n  toUseThisResourceFromADifferent:\n      'To use this resource from a different origin, the server needs to specify a cross-origin resource policy in the response headers:',\n  /**\n  *@description Message in the Headers View of the Network panel when the cross-origin resource policy header is too strict.\n  */\n  toUseThisResourceFromADifferentOrigin:\n      'To use this resource from a different origin, the server may relax the cross-origin resource policy response header:',\n  /**\n  *@description Message in the Headers View of the Network panel when the cross-origin resource policy header is too strict.\n  */\n  toUseThisResourceFromADifferentSite:\n      'To use this resource from a different site, the server may relax the cross-origin resource policy response header:',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/network/components/ResponseHeaderSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nconst plusIconUrl = new URL('../../../Images/plus_icon.svg', import.meta.url).toString();\n\nexport const RESPONSE_HEADER_SECTION_DATA_KEY = 'ResponseHeaderSection';\n\nexport interface ResponseHeaderSectionData {\n  request: SDK.NetworkRequest.NetworkRequest;\n  toReveal?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, header?: string};\n}\n\nexport class ResponseHeaderSection extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-response-header-section`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #request?: Readonly<SDK.NetworkRequest.NetworkRequest>;\n  #headerDetails: HeaderDetailsDescriptor[] = [];\n  #headerEditors: HeaderEditorDescriptor[] = [];\n  #uiSourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n  #overrides: Persistence.NetworkPersistenceManager.HeaderOverride[] = [];\n  #successfullyParsedOverrides = false;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [responseHeaderSectionStyles];\n  }\n\n  set data(data: ResponseHeaderSectionData) {\n    this.#request = data.request;\n    this.#headerDetails =\n        this.#request.sortedResponseHeaders.map(header => ({\n                                                  name: Platform.StringUtilities.toLowerCaseString(header.name),\n                                                  value: header.value,\n                                                }));\n\n    const headersWithIssues = [];\n    if (this.#request.wasBlocked()) {\n      const headerWithIssues =\n          BlockedReasonDetails.get((this.#request.blockedReason() as Protocol.Network.BlockedReason));\n      if (headerWithIssues) {\n        if (IssuesManager.RelatedIssue.hasIssueOfCategory(\n                this.#request, IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy)) {\n          const followLink = (): void => {\n            Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.LearnMoreLinkCOEP);\n            if (this.#request) {\n              void IssuesManager.RelatedIssue.reveal(\n                  this.#request, IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy);\n            }\n          };\n          if (headerWithIssues.blockedDetails) {\n            headerWithIssues.blockedDetails.reveal = followLink;\n          }\n        }\n        headersWithIssues.push(headerWithIssues);\n      }\n    }\n\n    function mergeHeadersWithIssues(\n        headers: HeaderDetailsDescriptor[], headersWithIssues: HeaderDetailsDescriptor[]): HeaderDetailsDescriptor[] {\n      let i = 0, j = 0;\n      const result: HeaderDetailsDescriptor[] = [];\n      while (i < headers.length && j < headersWithIssues.length) {\n        if (headers[i].name < headersWithIssues[j].name) {\n          result.push({...headers[i++], headerNotSet: false});\n        } else if (headers[i].name > headersWithIssues[j].name) {\n          result.push({...headersWithIssues[j++], headerNotSet: true});\n        } else {\n          result.push({...headersWithIssues[j++], ...headers[i++], headerNotSet: false});\n        }\n      }\n      while (i < headers.length) {\n        result.push({...headers[i++], headerNotSet: false});\n      }\n      while (j < headersWithIssues.length) {\n        result.push({...headersWithIssues[j++], headerNotSet: true});\n      }\n      return result;\n    }\n\n    this.#headerDetails = mergeHeadersWithIssues(this.#headerDetails, headersWithIssues);\n\n    const blockedResponseCookies = this.#request.blockedResponseCookies();\n    const blockedCookieLineToReasons = new Map<string, Protocol.Network.SetCookieBlockedReason[]>(\n        blockedResponseCookies?.map(c => [c.cookieLine, c.blockedReasons]));\n    for (const header of this.#headerDetails) {\n      if (header.name === 'set-cookie' && header.value) {\n        const matchingBlockedReasons = blockedCookieLineToReasons.get(header.value);\n        if (matchingBlockedReasons) {\n          header.setCookieBlockedReasons = matchingBlockedReasons;\n        }\n      }\n    }\n\n    if (data.toReveal?.section === NetworkForward.UIRequestLocation.UIHeaderSection.Response) {\n      this.#headerDetails.filter(header => header.name === data.toReveal?.header?.toLowerCase()).forEach(header => {\n        header.highlight = true;\n      });\n    }\n\n    const dataAssociatedWithRequest = this.#request.getAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY);\n    if (dataAssociatedWithRequest) {\n      this.#headerEditors = dataAssociatedWithRequest as HeaderEditorDescriptor[];\n    } else {\n      this.#headerEditors =\n          this.#headerDetails.map(header => ({name: header.name, value: header.value, originalValue: header.value}));\n      this.#markOverrides();\n    }\n\n    void this.#loadOverridesFileInfo();\n    this.#request.setAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY, this.#headerEditors);\n    this.#render();\n  }\n\n  #resetEditorState(): void {\n    if (!this.#request) {\n      return;\n    }\n    this.#headerEditors =\n        this.#headerDetails.map(header => ({name: header.name, value: header.value, originalValue: header.value}));\n    this.#markOverrides();\n    this.#request.setAssociatedData(RESPONSE_HEADER_SECTION_DATA_KEY, this.#headerEditors);\n  }\n\n  async #loadOverridesFileInfo(): Promise<void> {\n    if (!this.#request) {\n      return;\n    }\n    this.#uiSourceCode =\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().getHeadersUISourceCodeFromUrl(\n            this.#request.url());\n    if (!this.#uiSourceCode) {\n      this.#resetEditorState();\n      this.#render();\n      return;\n    }\n    try {\n      const deferredContent = await this.#uiSourceCode.requestContent();\n      this.#overrides =\n          JSON.parse(deferredContent.content || '[]') as Persistence.NetworkPersistenceManager.HeaderOverride[];\n      if (!this.#overrides.every(Persistence.NetworkPersistenceManager.isHeaderOverride)) {\n        throw 'Type mismatch after parsing';\n      }\n      this.#successfullyParsedOverrides = true;\n      for (const header of this.#headerEditors) {\n        header.valueEditable = true;\n      }\n    } catch (error) {\n      this.#successfullyParsedOverrides = false;\n      console.error(\n          'Failed to parse', this.#uiSourceCode?.url() || 'source code file', 'for locally overriding headers.');\n      this.#resetEditorState();\n    } finally {\n      this.#render();\n    }\n  }\n\n  #markOverrides(): void {\n    if (!this.#request || this.#request.originalResponseHeaders.length === 0) {\n      return;\n    }\n\n    // To compare original headers and actual headers we use a map from header\n    // name to an array of header values. This allows us to handle the cases\n    // in which we have multiple headers with the same name (and corresponding\n    // header values which may or may not occur multiple times as well). We are\n    // not using MultiMaps, because a Set would not able to distinguish between\n    // header values [a, a, b] and [a, b, b].\n    const originalHeaders = new Map<Platform.StringUtilities.LowerCaseString, string[]>();\n    for (const header of this.#request?.originalResponseHeaders || []) {\n      const headerName = Platform.StringUtilities.toLowerCaseString(header.name);\n      const headerValues = originalHeaders.get(headerName);\n      if (headerValues) {\n        headerValues.push(header.value);\n      } else {\n        originalHeaders.set(headerName, [header.value]);\n      }\n    }\n\n    const actualHeaders = new Map<Platform.StringUtilities.LowerCaseString, string[]>();\n    for (const header of this.#headerDetails) {\n      const headerValues = actualHeaders.get(header.name);\n      if (headerValues) {\n        headerValues.push(header.value || '');\n      } else {\n        actualHeaders.set(header.name, [header.value || '']);\n      }\n    }\n\n    const isDifferent =\n        (headerName: Platform.StringUtilities.LowerCaseString,\n         actualHeaders: Map<Platform.StringUtilities.LowerCaseString, string[]>,\n         originalHeaders: Map<Platform.StringUtilities.LowerCaseString, string[]>): boolean => {\n          const actual = actualHeaders.get(headerName);\n          const original = originalHeaders.get(headerName);\n          if (!actual || !original || actual.length !== original.length) {\n            return true;\n          }\n          actual.sort();\n          original.sort();\n          for (let i = 0; i < actual.length; i++) {\n            if (actual[i] !== original[i]) {\n              return true;\n            }\n          }\n          return false;\n        };\n\n    for (const headerName of actualHeaders.keys()) {\n      // If the array of actual headers and the array of original headers do not\n      // exactly match, mark all headers with 'headerName' as being overridden.\n      if (isDifferent(headerName, actualHeaders, originalHeaders)) {\n        this.#headerEditors.filter(header => header.name === headerName).forEach(header => {\n          header.isOverride = true;\n        });\n      }\n    }\n  }\n\n  #onHeaderEdited(event: HeaderEditedEvent): void {\n    const target = event.target as HTMLElement;\n    if (target.dataset.index === undefined) {\n      return;\n    }\n    const index = Number(target.dataset.index);\n    this.#updateOverrides(event.headerName, event.headerValue, index);\n  }\n\n  #updateOverrides(headerName: Platform.StringUtilities.LowerCaseString, headerValue: string, index: number): void {\n    if (!this.#request) {\n      return;\n    }\n\n    const previousName = this.#headerEditors[index].name;\n    const previousValue = this.#headerEditors[index].value;\n    this.#headerEditors[index].name = headerName;\n    this.#headerEditors[index].value = headerValue;\n    this.#headerEditors[index].isOverride = true;\n\n    // If multiple headers have the same name 'foo', we treat them as a unit.\n    // If there are overrides for 'foo', all original 'foo' headers are removed\n    // and replaced with the override(s) for 'foo'.\n    const headersToUpdate = this.#headerEditors.filter(\n        header => header.name === headerName && (header.value !== header.originalValue || header.isOverride));\n\n    const rawPath = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().rawPathFromUrl(\n        this.#request.url(), true);\n    const lastIndexOfSlash = rawPath.lastIndexOf('/');\n    const rawFileName = Common.ParsedURL.ParsedURL.substring(rawPath, lastIndexOfSlash + 1);\n\n    // If the last override-block matches 'rawFileName', use this last block.\n    // Otherwise just append a new block at the end. We are not using earlier\n    // blocks, because they could be overruled by later blocks, which contain\n    // wildcards in the filenames they apply to.\n    let block: Persistence.NetworkPersistenceManager.HeaderOverride|null = null;\n    const [lastOverride] = this.#overrides.slice(-1);\n    if (lastOverride?.applyTo === rawFileName) {\n      block = lastOverride;\n    } else {\n      block = {\n        applyTo: rawFileName,\n        headers: [],\n      };\n      this.#overrides.push(block);\n    }\n\n    // Keep header overrides for headers with a different name.\n    block.headers = block.headers.filter(header => header.name !== headerName);\n\n    // If a header name has been edited (only possible when adding headers),\n    // remove the previous override entry.\n    if (this.#headerEditors[index].name !== previousName) {\n      for (let i = 0; i < block.headers.length; ++i) {\n        if (block.headers[i].name === previousName && block.headers[i].value === previousValue) {\n          block.headers.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // Append freshly edited header overrides.\n    for (const header of headersToUpdate) {\n      block.headers.push({name: header.name, value: header.value || ''});\n    }\n\n    this.#uiSourceCode?.setWorkingCopy(JSON.stringify(this.#overrides, null, 2));\n    this.#uiSourceCode?.commitWorkingCopy();\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().updateInterceptionPatterns();\n  }\n\n  #onAddHeaderClick(): void {\n    this.#headerEditors.push({\n      name: Platform.StringUtilities.toLowerCaseString(i18nString(UIStrings.defaultHeaderName)),\n      value: i18nString(UIStrings.defaultHeaderValue),\n      isOverride: true,\n      nameEditable: true,\n      valueEditable: true,\n    });\n    const index = this.#headerEditors.length - 1;\n    this.#updateOverrides(this.#headerEditors[index].name, this.#headerEditors[index].value || '', index);\n    this.#render();\n\n    const rows = this.#shadow.querySelectorAll<HeaderSectionRow>('devtools-header-section-row');\n    const [lastRow] = Array.from(rows).slice(-1);\n    lastRow?.focus();\n  }\n\n  #render(): void {\n    if (!this.#request) {\n      return;\n    }\n\n    const headerDescriptors: HeaderDescriptor[] =\n        this.#headerEditors.map((headerEditor, index) => ({...this.#headerDetails[index], ...headerEditor}));\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${headerDescriptors.map((header, index) => html`\n        <${HeaderSectionRow.litTagName} .data=${{\n          header: header,\n        } as HeaderSectionRowData} @headeredited=${this.#onHeaderEdited} data-index=${index}></${HeaderSectionRow.litTagName}>\n      `)}\n      ${this.#successfullyParsedOverrides ? html`\n        <${Buttons.Button.Button.litTagName}\n          class=\"add-header-button\"\n          .variant=${Buttons.Button.Variant.SECONDARY}\n          .iconUrl=${plusIconUrl}\n          @click=${this.#onAddHeaderClick}>\n          ${i18nString(UIStrings.addHeader)}\n        </${Buttons.Button.Button.litTagName}>\n      ` : LitHtml.nothing}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-response-header-section', ResponseHeaderSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-response-header-section': ResponseHeaderSection;\n  }\n}\n\nconst BlockedReasonDetails = new Map<Protocol.Network.BlockedReason, HeaderDetailsDescriptor>([\n  [\n    Protocol.Network.BlockedReason.CoepFrameResourceNeedsCoepHeader,\n    {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-embedder-policy'),\n      value: null,\n      blockedDetails: {\n        explanation: i18nLazyString(UIStrings.toEmbedThisFrameInYourDocument),\n        examples: [{codeSnippet: 'Cross-Origin-Embedder-Policy: require-corp', comment: undefined}],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep,\n    {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),\n      value: null,\n      blockedDetails: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferent),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: same-site',\n            comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd),\n          },\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CoopSandboxedIframeCannotNavigateToCoopPage,\n    {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-opener-policy'),\n      value: null,\n      headerValueIncorrect: false,\n      blockedDetails: {\n        explanation: i18nLazyString(UIStrings.thisDocumentWasBlockedFrom),\n        examples: [],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameSite,\n    {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),\n      value: null,\n      headerValueIncorrect: true,\n      blockedDetails: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentSite),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: null,\n      },\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameOrigin,\n    {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),\n      value: null,\n      headerValueIncorrect: true,\n      blockedDetails: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentOrigin),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: same-site',\n            comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd),\n          },\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: null,\n      },\n    },\n  ],\n]);\n"]}