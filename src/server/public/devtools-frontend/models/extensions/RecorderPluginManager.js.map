{"version":3,"file":"RecorderPluginManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/extensions/RecorderPluginManager.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAEtD,IAAI,QAAQ,GAA+B,IAAI,CAAC;AAEhD,MAAM,OAAO,qBAAsB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IACvF,QAAQ,GAAmC,IAAI,GAAG,EAAE,CAAC;IAErD,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,qBAAqB,EAAE,CAAC;SACxC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,SAAS,CAAC,MAAiC;QACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC5D,CAAC;IAED,YAAY,CAAC,MAAiC;QAC5C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO;QACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5C,CAAC;CACF;AAED,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,qCAA2B,CAAA;IAC3B,yCAA+B,CAAA;AACjC,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type RecorderExtensionEndpoint} from './RecorderExtensionEndpoint.js';\nimport * as Common from '../../core/common/common.js';\n\nlet instance: RecorderPluginManager|null = null;\n\nexport class RecorderPluginManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #plugins: Set<RecorderExtensionEndpoint> = new Set();\n\n  static instance(): RecorderPluginManager {\n    if (!instance) {\n      instance = new RecorderPluginManager();\n    }\n    return instance;\n  }\n\n  addPlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.add(plugin);\n    this.dispatchEventToListeners(Events.PluginAdded, plugin);\n  }\n\n  removePlugin(plugin: RecorderExtensionEndpoint): void {\n    this.#plugins.delete(plugin);\n    this.dispatchEventToListeners(Events.PluginRemoved, plugin);\n  }\n\n  plugins(): RecorderExtensionEndpoint[] {\n    return Array.from(this.#plugins.values());\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  PluginAdded = 'pluginAdded',\n  PluginRemoved = 'pluginRemoved',\n}\n\nexport type EventTypes = {\n  [Events.PluginAdded]: RecorderExtensionEndpoint,\n  [Events.PluginRemoved]: RecorderExtensionEndpoint,\n};\n"]}