{"version":3,"file":"AttributionReportingIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/AttributionReportingIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport {type MarkdownIssueDescription} from './MarkdownIssueDescription.js';\n\nexport const enum IssueCode {\n  PermissionPolicyDisabled = 'AttributionReportingIssue::PermissionPolicyDisabled',\n  PermissionPolicyNotDelegated = 'AttributionReportingIssue::PermissionPolicyNotDelegated',\n  UntrustworthyReportingOrigin = 'AttributionReportingIssue::UntrustworthyReportingOrigin',\n  InsecureContext = 'AttributionReportingIssue::InsecureContext',\n  InvalidRegisterSourceHeader = 'AttributionReportingIssue::InvalidRegisterSourceHeader',\n  InvalidRegisterTriggerHeader = 'AttributionReportingIssue::InvalidRegisterTriggerHeader',\n  InvalidEligibleHeader = 'AttributionReportingIssue::InvalidEligibleHeader',\n  TooManyConcurrentRequests = 'AttributionReportingIssue::TooManyConcurrentRequests',\n  SourceAndTriggerHeaders = 'AttributionReportingIssue::SourceAndTriggerHeaders',\n  SourceIgnored = 'AttributionReportingIssue::SourceIgnored',\n  TriggerIgnored = 'AttributionReportingIssue::TriggerIgnored',\n  // TODO(apaseltiner): Remove this once old issue types are removed from\n  // protocol.\n  Unknown = 'AttributionReportingIssue::Unknown',\n}\n\nfunction getIssueCode(details: Protocol.Audits.AttributionReportingIssueDetails): IssueCode {\n  switch (details.violationType) {\n    case Protocol.Audits.AttributionReportingIssueType.PermissionPolicyDisabled:\n      return IssueCode.PermissionPolicyDisabled;\n    case Protocol.Audits.AttributionReportingIssueType.PermissionPolicyNotDelegated:\n      return IssueCode.PermissionPolicyNotDelegated;\n    case Protocol.Audits.AttributionReportingIssueType.UntrustworthyReportingOrigin:\n      return IssueCode.UntrustworthyReportingOrigin;\n    case Protocol.Audits.AttributionReportingIssueType.InsecureContext:\n      return IssueCode.InsecureContext;\n    case Protocol.Audits.AttributionReportingIssueType.InvalidHeader:\n      return IssueCode.InvalidRegisterSourceHeader;\n    case Protocol.Audits.AttributionReportingIssueType.InvalidRegisterTriggerHeader:\n      return IssueCode.InvalidRegisterTriggerHeader;\n    case Protocol.Audits.AttributionReportingIssueType.InvalidEligibleHeader:\n      return IssueCode.InvalidEligibleHeader;\n    case Protocol.Audits.AttributionReportingIssueType.TooManyConcurrentRequests:\n      return IssueCode.TooManyConcurrentRequests;\n    case Protocol.Audits.AttributionReportingIssueType.SourceAndTriggerHeaders:\n      return IssueCode.SourceAndTriggerHeaders;\n    case Protocol.Audits.AttributionReportingIssueType.SourceIgnored:\n      return IssueCode.SourceIgnored;\n    case Protocol.Audits.AttributionReportingIssueType.TriggerIgnored:\n      return IssueCode.TriggerIgnored;\n    default:\n      return IssueCode.Unknown;\n  }\n}\n\nconst structuredHeaderLink = {\n  link: 'https://tools.ietf.org/id/draft-ietf-httpbis-header-structure-15.html#rfc.section.4.2.2',\n  linkTitle: 'Structured Headers RFC',\n};\n\nexport class AttributionReportingIssue extends Issue<IssueCode> {\n  issueDetails: Readonly<Protocol.Audits.AttributionReportingIssueDetails>;\n\n  constructor(\n      issueDetails: Protocol.Audits.AttributionReportingIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(getIssueCode(issueDetails), issuesModel);\n    this.issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.AttributionReporting;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    switch (this.code()) {\n      case IssueCode.PermissionPolicyDisabled:\n        return {\n          file: 'arPermissionPolicyDisabled.md',\n          links: [],\n        };\n      case IssueCode.PermissionPolicyNotDelegated:\n        return {\n          file: 'arPermissionPolicyNotDelegated.md',\n          links: [],\n        };\n      case IssueCode.UntrustworthyReportingOrigin:\n        return {\n          file: 'arUntrustworthyReportingOrigin.md',\n          links: [],\n        };\n      case IssueCode.InsecureContext:\n        return {\n          file: 'arInsecureContext.md',\n          links: [],\n        };\n      case IssueCode.InvalidRegisterSourceHeader:\n        return {\n          file: 'arInvalidRegisterSourceHeader.md',\n          links: [],\n        };\n      case IssueCode.InvalidRegisterTriggerHeader:\n        return {\n          file: 'arInvalidRegisterTriggerHeader.md',\n          links: [],\n        };\n      case IssueCode.InvalidEligibleHeader:\n        return {\n          file: 'arInvalidEligibleHeader.md',\n          links: [structuredHeaderLink],\n        };\n      case IssueCode.TooManyConcurrentRequests:\n        return {\n          file: 'arTooManyConcurrentRequests.md',\n          links: [],\n        };\n      case IssueCode.SourceAndTriggerHeaders:\n        return {\n          file: 'arSourceAndTriggerHeaders.md',\n          links: [],\n        };\n      case IssueCode.SourceIgnored:\n        return {\n          file: 'arSourceIgnored.md',\n          links: [structuredHeaderLink],\n        };\n      case IssueCode.TriggerIgnored:\n        return {\n          file: 'arTriggerIgnored.md',\n          links: [structuredHeaderLink],\n        };\n      case IssueCode.Unknown:\n        return null;\n    }\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.issueDetails);\n  }\n\n  getKind(): IssueKind {\n    switch (this.code()) {\n      case IssueCode.PermissionPolicyNotDelegated:\n        return IssueKind.BreakingChange;\n      case IssueCode.PermissionPolicyDisabled:\n      case IssueCode.UntrustworthyReportingOrigin:\n      case IssueCode.InsecureContext:\n      case IssueCode.InvalidRegisterSourceHeader:\n      case IssueCode.InvalidRegisterTriggerHeader:\n      case IssueCode.InvalidEligibleHeader:\n      case IssueCode.TooManyConcurrentRequests:\n      case IssueCode.SourceAndTriggerHeaders:\n      case IssueCode.SourceIgnored:\n      case IssueCode.TriggerIgnored:\n      case IssueCode.Unknown:\n        return IssueKind.PageError;\n    }\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      AttributionReportingIssue[] {\n    const {attributionReportingIssueDetails} = inspectorIssue.details;\n    if (!attributionReportingIssueDetails) {\n      console.warn('Attribution Reporting issue without details received.');\n      return [];\n    }\n    return [new AttributionReportingIssue(attributionReportingIssueDetails, issuesModel)];\n  }\n}\n"]}