{"version":3,"file":"PuppeteerConnection.js","sourceRoot":"","sources":["../../../../../../front_end/services/puppeteer/PuppeteerConnection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as puppeteer from '../../third_party/puppeteer/puppeteer.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nclass Transport implements puppeteer.ConnectionTransport {\n  #connection: SDK.Connections.ParallelConnectionInterface;\n  #knownIds = new Set<number>();\n\n  constructor(connection: SDK.Connections.ParallelConnectionInterface) {\n    this.#connection = connection;\n  }\n\n  send(data: string): void {\n    const message = JSON.parse(data);\n    this.#knownIds.add(message.id);\n    this.#connection.sendRawMessage(data);\n  }\n\n  close(): void {\n    void this.#connection.disconnect();\n  }\n\n  set onmessage(cb: (message: string) => void) {\n    this.#connection.setOnMessage((message: Object) => {\n      const data = (message) as {id: number, method: string, params: unknown, sessionId?: string};\n      if (data.id && !this.#knownIds.has(data.id)) {\n        return;\n      }\n      this.#knownIds.delete(data.id);\n      if (!data.sessionId) {\n        return;\n      }\n      return cb(JSON.stringify({\n        ...data,\n        // Puppeteer is expecting to use the default session, but we give it a non-default session in #connection.\n        // Replace that sessionId with undefined so Puppeteer treats it as default.\n        sessionId: data.sessionId === this.#connection.getSessionId() ? undefined : data.sessionId,\n      }));\n    });\n  }\n\n  set onclose(cb: () => void) {\n    const prev = this.#connection.getOnDisconnect();\n    this.#connection.setOnDisconnect(reason => {\n      if (prev) {\n        prev(reason);\n      }\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\n\nclass PuppeteerConnection extends puppeteer.Connection {\n  override async onMessage(message: string): Promise<void> {\n    const msgObj = JSON.parse(message) as {id: number, method: string, params: unknown, sessionId?: string};\n    if (msgObj.sessionId && !this._sessions.has(msgObj.sessionId)) {\n      return;\n    }\n    void super.onMessage(message);\n  }\n}\n\nexport class PuppeteerConnectionHelper {\n  static async connectPuppeteerToConnection(options: {\n    connection: SDK.Connections.ParallelConnectionInterface,\n    mainFrameId: string,\n    targetInfos: Protocol.Target.TargetInfo[],\n    targetFilterCallback: (targetInfo: Protocol.Target.TargetInfo) => boolean,\n    isPageTargetCallback: (targetInfo: Protocol.Target.TargetInfo) => boolean,\n  }): Promise<{\n    page: puppeteer.Page | null,\n    browser: puppeteer.Browser,\n    puppeteerConnection: puppeteer.Connection,\n  }> {\n    const {connection, mainFrameId, targetInfos, targetFilterCallback, isPageTargetCallback} = options;\n    // Pass an empty message handler because it will be overwritten by puppeteer anyways.\n    const transport = new Transport(connection);\n\n    // url is an empty string in this case parallel to:\n    // https://github.com/puppeteer/puppeteer/blob/f63a123ecef86693e6457b07437a96f108f3e3c5/src/common/BrowserConnector.ts#L72\n    const puppeteerConnection = new PuppeteerConnection('', transport);\n    const targetIdsForAutoAttachEmulation = targetInfos.filter(targetFilterCallback).map(t => t.targetId);\n\n    const browserPromise = puppeteer.Browser._create(\n        'chrome',\n        puppeteerConnection,\n        [] /* contextIds */,\n        false /* ignoreHTTPSErrors */,\n        undefined /* defaultViewport */,\n        undefined /* process */,\n        undefined /* closeCallback */,\n        targetFilterCallback,\n        isPageTargetCallback,\n    );\n\n    const [, browser] = await Promise.all([\n      Promise.all(targetIdsForAutoAttachEmulation.map(\n          targetId => puppeteerConnection._createSession({targetId}, /* emulateAutoAttach= */ true))),\n      browserPromise,\n    ]);\n\n    // TODO: replace this with browser.pages() once the Puppeteer version is rolled.\n    const pages =\n        await Promise.all(browser.browserContexts()\n                              .map(ctx => ctx.targets())\n                              .flat()\n                              .filter(target => target.type() === 'page' || target.url().startsWith('devtools://'))\n                              .map(target => target.page()));\n    const page =\n        pages.filter((p): p is puppeteer.Page => p !== null).find(p => p.mainFrame()._id === mainFrameId) || null;\n\n    return {page, browser, puppeteerConnection};\n  }\n}\n"]}